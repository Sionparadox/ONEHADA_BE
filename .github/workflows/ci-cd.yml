name: CI/CD Pipeline for ONEHADA_BE

on:
  push:
    branches:
      - main # main 브랜치에 푸시할 때 실행
  pull_request:
    branches:
      - main # main 브랜치에 PR이 열릴 때 실행

jobs:
  build:
    runs-on: ubuntu-latest # Ubuntu 환경에서 실행

    steps:
      # 레포지토리 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # JDK 설치 (Spring 애플리케이션 빌드에 필요)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17' # Spring 애플리케이션 빌드에 사용할 Java 버전

      # Gradle 캐시 설정
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Gradle을 사용하여 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test # 테스트는 생략 (-x test)

      # Docker를 설치
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Docker Hub에 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub 로그인 정보
          password: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub 로그인 정보

      # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/onehada-be:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/onehada-be:latest
